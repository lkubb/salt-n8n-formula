# vim: ft=yaml
# yamllint disable rule:comments-indentation
---
n8n:
  install:
      # Install rootless containers running as dedicated user.
    rootless: true
      # Add autoupdate label to containers, allowing to run
      # podman autoupdate (manually)
    autoupdate: true
      # Manage podman-auto-update.timer (auto-autoupdate)
      # (null=do not manage, false=disable, true=enable)
    autoupdate_service: false
      # When applying `clean` states, also remove application data.
      # Setting this to true might incur accidental data loss!
    remove_all_data_for_sure: false
  config:
      # Used to manually provide the Webhook URL when running n8n behind a
      # reverse proxy. https://docs.n8n.io/hosting/configuration/#webhook-url
  # webhook_url: null
      # The n8n instance timezone. Important for schedule nodes (such as Cron).
    generic_timezone: Etc/UTC
      # The default name used for new workflows.
  # workflows_default_name: My workflow
      # Permit users to import specific built-in modules in Function nodes.
      # Use * to allow all. n8n disables importing modules by default.
  # node_function_allow_builtin: null
      # Permit users to import specific external modules (from n8n/node_modules)
      # in Function nodes. n8n disables importing modules by default.
  # node_function_allow_external: null
      # Used when building the n8n-editor-ui package manually to set how the
      # frontend can reach the backend API.
  # vue_app_url_base_api: http://localhost:5678/
      # Files containing external hooks.
  # external_hook_files: []

  # credentials:
        # Overwrites for credentials
    # overwrite_data: null
        # The API endpoint to fetch credentials.
    # overwrite_endpoint: null
        # The default name for credentials.
    # default_name: My credentials

    db:
        # sqlite, mariadb, mysqldb, postgresdb
      type: sqlite
    # table_prefix: null
      mysqldb:
        database: n8n
        host: db
        port: 3306
        user: n8n
          # Will be autogenerated if left empty.
        password: null
      postgresdb:
        database: n8n
        host: db
        port: 5432
        user: n8n
          # Will be autogenerated if left empty.
        password: null
      # schema: public
      # ssl_ca: null
      # ssl_cert: null
      # ssl_key: null
      # ssl_reject_unauthorized: true
        # Runs VACUUM operation on startup to rebuild the database.
        # Reduces file size and optimizes indexes. This is a long running
        # blocking operation and increases start-up time.
    # sqlite_vacuum_on_startup: false
    # logging:
          # Whether to enable database-specific logging.
      # enabled: false
          # Database log output level.
          # query, error, schema, warn, info, log, all
      # options: error
          # Maximum execution time (in milliseconds) before n8n logs a warning.
          # Set to 0 to disable long running query warning.
      # max_execution_time: 1000

    n8n:
        # A locale identifier, compatible with the Accept-Language header. n8n doesn't
        # support regional identifiers, such as de-AT. When running in a locale other
        # than the default, n8n displays UI strings in the selected locale, and falls
        # back to en for any untranslated strings.
    # default_locale: en
        # Public URL where users can access the editor.
        # Also used for emails sent from n8n.
    # editor_base_url: null
        # Use to provide the path(s) to any JSON configuration file(s) (comma-separated)
    # config_files: null
        # Use to provide the path(s) to any JSON configuration file(s)
        # (comma-separated).
    # disable_ui: false
    # templates:
          # Enable workflow templates (true) or disable (false).
      # enabled: true
          # Change this if creating your own workflow template library.
      # host: https://api.n8n.io
        # Provide a custom key used to encrypt credentials in the n8n database.
        # By default n8n generates a random key on first launch.
    # encryption_key: null
        # Provide the path where n8n will store user-specific data, such as
        # database file and encryption key.
    # user_folder: n8n
        # The path n8n deploys to.
    # path: /
        # Host name n8n runs on.
    # host: localhost
        # The HTTP port n8n runs on.
      port: 5678
        # The IP address n8n should listen on.
    # listen_address: 0.0.0.0
        # The protocol used to reach n8n.
    # protocol: http
        # The SSL key for HTTPS protocol.
    # ssl_key: null
        # The SSL certificate for HTTPS protocol.
    # ssl_cert: null
        # Whether to ask users personalisation questions and then customise
        # n8n accordingly.
    # personalization_enabled: true
    # version_notifications:
          # When enabled, n8n sends notifications of new versions and security updates.
      # enabled: true
          # The endpoint to retrieve where version information.
      # endpoint: https://api.n8n.io/versions/
          # The URL displayed in the New Versions panel for additional information.
      # info_url: https://docs.n8n.io/getting-started/installation/updating.html
      diagnostics:
          # Whether to share selected, anonymous telemetry with n8n
        enabled: false
          # Telemetry configuration for the frontend.
      # config_frontend: 1zPn9bgWPzlQc0p8Gj1uiK6DOTn;https://telemetry.n8n.io
          # Telemetry configuration for the backend.
      # config_backend: 1zPn7YoGC3ZXE9zLeTKLuQCB4F6;https://telemetry.n8n.io/v1/batch
        # A comma separated list of available binary data modes.
    # available_binary_data_modes: filesystem
        # The path where n8n stores binary data. Defaults to N8N_USER_FOLDER/binaryData
    # binary_data_storage_path: null
        # Time to live (in minutes) for binary data of unsaved executions.
    # binary_data_ttl: 60
        # The default binary data mode. default keeps binary data in memory.
        # Set to filesystem to use the filesystem.
    # default_binary_data_mode: default
        # Time to live (in minutes) for persisted data.
    # persisted_binary_data_ttl: 1440
        # Whether to show the n8n hiring banner in the console (true) or not (false).
    # hiring_banner_enabled: true
        # Note that n8n ignores this environment variable if you have already
        # set up an owner account.
    # user_management_disabled: false
        # Enable emails
    # email_mode: smtp
    # smtp_host: null
    # smtp_port: null
    # smtp_user: null
    # smtp_pass: null
    # smtp_sender: null
    # smtp_ssl: true
        # Full path to your HTML email template. This overrides the default template
        # for invite emails.
    # um_email_templates_invite: null
        # Full path to your HTML email template. This overrides the default template
        # for password reset emails.
    # um_email_templates_pwreset: null
        # Set a specific JWT secret. By default, n8n generates one on start.
    # user_management_jwt_secret: null
        # The maximum payload size in MB.
    # payload_size_max: 16
        # Whether to enable the metrics endpoint.
    # metrics: false
        # Optional prefix for metrics names.
    # metrics_prefix: n8n_
        # The path used for REST endpoint.
    # endpoint_rest: rest
        # The path used for webhook endpoint.
    # endpoint_webhook: webhok
        # The path used for test-webhook endpoint.
    # endpoint_webhook_test: webhook-test
        # The path used for waiting-webhook endpoint.
    # endpoint_webhook_wait: webhook-waiting
        # Disable production webhooks from main process. This helps ensure no HTTP
        # traffic load to main process when using webhook-specific processes.
    # disable_production_main_process: false
        # Only de-register webhooks on external services when workflows are deactivated.
    # skip_webhook_deregistration_shutdown: false
        # Exclude endpoints from authentication checks.
        # The endpoints must not start with a forward slash ("/").
    # auth_exclude_endpoints: []
        # Whether n8n should activate basic auth for editor and REST-API access.
    # basic_auth_active: false
        # The name of the n8n user for basic authentication.
    # basic_auth_user: null
        # The password of the n8n user for basic authentication.
    # basic_auth_password: null
        # Whether to hash the basic authentication password.
    # basic_auth_hash: false
        # Whether to allow users to access environment variables in expressions and the
        # function node (false) or not (true).
    # block_env_access_in_node: false
        # Whether n8n should activate JWT authentication for editor and REST-API access.
    # jwt_auth_active: false
        # The request header containing a signed JWT.
    # jwt_auth_header: null
        # Optional. The request header value prefix to strip.
    # jwt_auth_header_value_prefix: null
        # The URI to fetch JWK Set for JWT authentication.
    # jwks_uri: null
        # Optional. The expected JWT issuer.
    # jwt_issuer: null
        # Optional. The expected JWT namespace.
    # jwt_namespace: null
        # Optional. The allowed JWT tenant.
    # jwt_allowed_tenant: null
        # Optional. The JWT tenant key name to inspect within the JWT namespace.
    # jwt_allowed_tenant_key: null
    # log:
          # info, warn, error, verbose, debug
      # level: info
          # Where to output logs. Separate multiple by comma. Valid: console, file.
      # output: console
          # Max number of log files to keep.
      # file_count_max: 100
          # Max size of each log file in MB.
      # file_size_max: 16
          # Log file location. Requires N8N_LOG_OUTPUT set to file.
      # file_location: null
        # Specify the path to additional directories containing your custom nodes.
    # custom_extensions: null
        # Whether to show onboarding tips when creating a new workflow (true)
        # or not (false).
    # onboarding_flow_disabled: false
        # Whether to disable workflow tags (true) or enable tags (false).
    # workflow_tags_disabled: false

  # nodes:
        # Specify which nodes to load.
    # include: null
        # Specify which nodes not to load.
    # exclude: null
        # Specify which Node Type to use as Error Trigger.
    # error_trigger_type: n8n-nodes-base.errorTrigger

    queue:
        # Prefix to use for all queue keys.
    # bull_prefix: null
        # The Redis database used.
    # bull_redis_db: 0
        # The Redis host.
      bull_redis_host: redis
    # bull_redis_port: 6379
    # bull_redis_password: null
    # bull_redis_timeout_threshold: 10000
        # Interval (in seconds) for active polling to the queue to recover from Redis
        # crashes. 0 disables recovery. May increase Redis traffic significantly.
    # recovery_interval: 60
        # Whether to enable health checks (true) or disable (false).
    # health_check_active: false
        # The port to serve health checks on.
    # health_check_port: null

  # executions:
        # Whether n8n executions run in their own process or the main process.
        # All workflows run in their own separate process. This ensures that all CPU
        # cores get used and that they don't block each other on CPU intensive tasks.
        # It also makes sure that one execution crashing doesn't take down the whole
        # application. The disadvantage is that it slows down the start-time
        # considerably and uses much more memory. If your workflows aren't CPU
        # intensive, and they have to start very fast, it's possible to run them all
        # directly in the main-process with this setting. `own`/`main`
    # process: own
        # Whether executions should run directly or using queue. `regular`/`queue`
    # mode: regular
        # The maximum run time (in seconds) before stopping a workflow execution.
        # Set to -1 to disable.
    # timeout: -1
        # The maximum execution time (in seconds) for an individual workflow.
    # timeout_max: 3600
        # Whether n8n saves execution data on error. `all`/`none`
    # data_save_on_error: all
        # Whether n8n saves execution data on success. `all`/`none`
    # data_save_on_success: all
        # Whether to save progress for each node executed (true) or not (false).
    # data_save_on_progress: false
        # Whether to save data of executions when started manually.
    # data_save_manual_executions: false
        # Whether to delete data of past executions on a rolling basis.
    # data_prune: false
        # The execution age (in hours) before it's deleted.
    # data_max_age: 336
        # The timeout (in seconds) after n8n prunes execution data.
    # data_prune_timeout: 3600

  mysql:
    enable: false
  redis:
    enable: false
  postgres:
    enable: false

  lookup:
    rootgroup: root
    compose:
      create_pod: null
      pod_args: null
      project_name: n8n
      remove_orphans: true
      build: false
      build_args: null
      pull: false
      service:
        container_prefix: null
        ephemeral: true
        pod_prefix: null
        restart_policy: on-failure
        restart_sec: 2
        separator: null
        stop_timeout: null
    paths:
      base: /opt/containers/n8n
      compose: docker-compose.yml
      config_n8n: n8n.env
      config_db: db.env
      data: data
      db: db
    user:
      groups: []
      home: null
      name: n8n
      shell: /usr/sbin/nologin
      uid: null
      gid: null
    containers:
      db:
        image: docker.io/library/mariadb
      n8n:
        image: docker.io/n8nio/n8n:latest
      redis:
        image: docker.io/library/redis:latest

  tofs:
      # The files_switch key serves as a selector for alternative
      # directories under the formula files directory. See TOFS pattern
      # doc for more info.
      # Note: Any value not evaluated by `config.get` will be used literally.
      # This can be used to set custom paths, as many levels deep as required.
    files_switch:
      - any/path/can/be/used/here
      - id
      - roles
      - osfinger
      - os
      - os_family

      # All aspects of path/file resolution are customisable using the options below.
      # This is unnecessary in most cases; there are sensible defaults.
      # Default path: salt://< path_prefix >/< dirs.files >/< dirs.default >
      # I.e.: salt://n8n/files/default
      # path_prefix: template_alt
      # dirs:
      #   files: files_alt
      #   default: default_alt
      # The entries under `source_files` are prepended to the default source files
      # given for the state
    source_files:
      n8n compose file is managed:
        - docker-compose_alt.yml
        - docker-compose_alt.yml.j2
      n8n environment file is managed:
        - n8n_alt.env
        - n8n_alt.env.j2
      db environment file is managed:
        - db_alt.env
        - db_alt.env.j2
